import { AddressElement } from "./addressElement";

export namespace AugAddressElements {

    export const BuildingName: AddressElement = { elementName: "buildingName", description: "Building name", example: "Treasury Building" };
    export const FlatUnitName: AddressElement = { elementName: "flatUnitName", description: "Flat/Unit name", example: "Flat 2" };
    export const FlatUnitType: AddressElement = { elementName: "flatUnitType", description: "Flat/Unit type", example: "Flat" };
    export const FlatUnitNumber: AddressElement = { elementName: "flatUnitNumber", description: "Flat/unit number", example: "2" };
    export const SubBuildingNumber: AddressElement = { elementName: "subBuildingNumber", description: "Sub-building number", example: "5a" };
    export const SubBuildingNumberNumber: AddressElement = { elementName: "subBuildingNumberNumber", description: "Sub-building number (number)", example: "5" };
    export const SubBuildingNumberAlpha: AddressElement = { elementName: "subBuildingNumberAlpha", description: "Sub-building number (alpha)", example: "a" };
    export const BuildingLevel: AddressElement = { elementName: "buildingLevel", description: "Building level", example: "Level 7" };
    export const BuildingLevelType: AddressElement = { elementName: "buildingLevelType", description: "Building level type", example: "Level" };
    export const BuildingLevelNumber: AddressElement = { elementName: "buildingLevelNumber", description: "Building level number", example: "7" };
    export const BuildingNumber: AddressElement = { elementName: "buildingNumber", description: "Building number", example: "1-131" };
    export const BuildingNumberFirst: AddressElement = { elementName: "buildingNumberFirst", description: "Building number (first)", example: "1" };
    export const BuildingNumberLast: AddressElement = { elementName: "buildingNumberLast", description: "Building number (last)", example: "131" };
    export const AllotmentNumber1: AddressElement = { elementName: "allotmentNumber1", description: "Allotment number", example: "Lot 16" };
    export const AllotmentLot: AddressElement = { elementName: "allotmentLot", description: "Allotment lot", example: "Lot" };
    export const AllotmentNumber2: AddressElement = { elementName: "allotmentNumber2", description: "Allotment number", example: "16" };
    export const Street: AddressElement = { elementName: "street", description: "Street", example: "Tudor Court East" };
    export const StreetName: AddressElement = { elementName: "streetName", description: "Street name", example: "Tudor" };
    export const StreetType: AddressElement = { elementName: "streetType", description: "Street type", example: "Court" };
    export const StreetTypeSuffix: AddressElement = { elementName: "streetTypeSuffix", description: "Street type suffix", example: "East" };
    export const PrivateStreet: AddressElement = { elementName: "privateStreet", description: "Private Street", example: "Private Street" };
    export const Locality: AddressElement = { elementName: "locality", description: "Locality", example: "Ayr" };
    export const BorderingLocality: AddressElement = { elementName: "borderingLocality", description: "Bordering Locality", example: "Mt Kelly" };
    export const StateCode: AddressElement = { elementName: "stateCode", description: "State code", example: "QLD" };
    export const StateName: AddressElement = { elementName: "stateName", description: "State Name", example: "Queensland" };
    export const Postcode: AddressElement = { elementName: "postcode", description: "Postcode", example: "4807" };
    export const CountryName: AddressElement = { elementName: "countryName", description: "Country Name", example: "Australia" };
    export const TwoCharacterIsoCountryCode: AddressElement = { elementName: "twoCharacterIsoCountryCode", description: "Two character country code", example: "AU" };
    export const ThreeCharacterIsoCountryCode: AddressElement = { elementName: "threeCharacterIsoCountryCode", description: "Three character country code", example: "AUS" };
    export const GeocodeLevelCode: AddressElement = { elementName: "geocodeLevelCode", description: "This is the geocode level code", example: "2" };
    export const GeocodeLevelDescription: AddressElement = { elementName: "geocodeLevelDescription", description: "This is the geocode level description", example: "Street level geocode only" };
    export const GeocodeTypeCode: AddressElement = { elementName: "geocodeTypeCode", description: "This is the geocode type code", example: "LB" };
    export const GeocodeTypeDescription: AddressElement = { elementName: "geocodeTypeDescription", description: "This is the geocode type description", example: "Letterbox" };
    export const AddressLevelLongitude: AddressElement = { elementName: "addressLevelLongitude", description: "The address-level longitude in degrees", example: "" };
    export const AddressLevelLatitude: AddressElement = { elementName: "addressLevelLatitude", description: "The address-level latitude in degrees", example: "" };
    export const AddressLevelElevation: AddressElement = { elementName: "addressLevelElevation", description: "The address-level elevation", example: "" };
    export const AddressLevelPlanimetricAccuracy: AddressElement = { elementName: "addressLevelPlanimetricAccuracy", description: "The address-level planimetric accuracy", example: "" };
    export const AddressLevelBoundaryExtent: AddressElement = { elementName: "addressLevelBoundaryExtent", description: "The address-level boundary extent", example: "" };
    export const AddressLevelGeocodeReliabilityCode: AddressElement = { elementName: "addressLevelGeocodeReliabilityCode", description: "The address-level geocode reliability code", example: "2" };
    export const AddressLevelGeocodeReliabilityDescription: AddressElement = { elementName: "addressLevelGeocodeReliabilityDescription", description: "The address-level geocode reliability description", example: "Geocode accuracy sufficient to place centroid within address site boundary" };
    export const StreetLevelLongitude: AddressElement = { elementName: "streetLevelLongitude", description: "The street-level longitude in degrees", example: "" };
    export const StreetLevelLatitude: AddressElement = { elementName: "streetLevelLatitude", description: "The street-level latitude in degrees", example: "" };
    export const StreetLevelPlanimetricAccuracy: AddressElement = { elementName: "streetLevelPlanimetricAccuracy", description: "The street-level planimetric accuracy", example: "" };
    export const StreetLevelBoundaryExtent: AddressElement = { elementName: "streetLevelBoundaryExtent", description: "The street-level boundary extent", example: "" };
    export const StreetLevelGeocodeReliabilityCode: AddressElement = { elementName: "streetLevelGeocodeReliabilityCode", description: "The street-level geocode reliability code", example: "4" };
    export const StreetLevelGeocodeReliabilityDescription: AddressElement = { elementName: "streetLevelGeocodeReliabilityDescription", description: "The street-level geocode reliability description", example: "Geocode accuracy sufficient to associate address site with a unique road feature" };
    export const LocalityLevelLongitude: AddressElement = { elementName: "localityLevelLongitude", description: "The locality-level longitude in degrees", example: "" };
    export const LocalityLevelLatitude: AddressElement = { elementName: "localityLevelLatitude", description: "The locality-level latitude in degrees", example: "" };
    export const LocalityLevelPlanimetricAccuracy: AddressElement = { elementName: "localityLevelPlanimetricAccuracy", description: "The locality-level planimetric accuracy", example: "" };
    export const LocalityLevelGeocodeReliabilityCode: AddressElement = { elementName: "localityLevelGeocodeReliabilityCode", description: "The locality-level geocode reliability code", example: "5" };
    export const LocalityLevelGeocodeReliabilityDescription: AddressElement = { elementName: "localityLevelGeocodeReliabilityDescription", description: "The locality-level geocode reliability description", example: "Geocode accuracy sufficient to associate address site with a unique locality or neighbourhood" };
    export const Longitude: AddressElement = { elementName: "longitude", description: "The highest-level longitude in degrees", example: "" };
    export const Latitude: AddressElement = { elementName: "latitude", description: "The highest-level latitude in degrees", example: "" };
    export const Elevation: AddressElement = { elementName: "elevation", description: "The highest-level elevation", example: "" };
    export const PlanimetricAccuracy: AddressElement = { elementName: "planimetricAccuracy", description: "The highest-level planimetric accuracy", example: "" };
    export const BoundaryExtent: AddressElement = { elementName: "boundaryExtent", description: "The highest-level boundary extent", example: "" };
    export const GeocodeReliabilityCode: AddressElement = { elementName: "geocodeReliabilityCode", description: "The highest-level geocode reliability code", example: "" };
    export const GeocodeReliabilityDescription: AddressElement = { elementName: "geocodeReliabilityDescription", description: "The highest-level geocode reliability description", example: "" };
    export const GnafPid: AddressElement = { elementName: "gnafPid", description: "Persistent identifier of an address", example: "GANSW716798454" };
    export const GnafAddressTypeCode: AddressElement = { elementName: "gnafAddressTypeCode", description: "This is the address type code", example: "R/RMB" };
    export const GnafAddressTypeDescription: AddressElement = { elementName: "gnafAddressTypeDescription", description: "This is the address type description", example: "Rural Roadside Mail Box" };
    export const StreetPid: AddressElement = { elementName: "streetPid", description: "This is a unique street persistent identifier", example: "" };
    export const LocalityPid: AddressElement = { elementName: "localityPid", description: "This is a unique locality persistent identifier", example: "" };
    export const ConfidenceLevelCode: AddressElement = { elementName: "confidenceLevelCode", description: "This is the confidence level code", example: "2" };
    export const ConfidenceLevelDescription: AddressElement = { elementName: "confidenceLevelDescription", description: "This is the confidence level descriptor", example: "All three contributors have supplied an identical address" };
    export const MeshBlockId2021: AddressElement = { elementName: "2021MeshBlockId", description: "The 2021 version of the Mesh Block ID", example: "" };
    export const MeshBlockCode2021: AddressElement = { elementName: "2021MeshBlockCode", description: "The 11-digit 2021 version of the Mesh Block Code", example: "" };
    export const MeshBlockMatchCode2021: AddressElement = { elementName: "2021MeshBlockMatchCode", description: "The code for the level of matching to 2021 Mesh Blocks", example: "" };
    export const MeshBlockMatchDescription2021: AddressElement = { elementName: "2021MeshBlockMatchDescription", description: "The description of the 2021 Mesh Block match level", example: "" };
    export const MeshBlockId2016: AddressElement = { elementName: "2016MeshBlockId", description: "The 2016 version of the MeshBlock ID", example: "" };
    export const MeshBlockCode2016: AddressElement = { elementName: "2016MeshBlockCode", description: "The 11-digit 2016 version of the MeshBlock Code", example: "" };
    export const MeshBlockMatchCode2016: AddressElement = { elementName: "2016MeshBlockMatchCode", description: "The code for the level of matching to 2016 Mesh Blocks", example: "" };
    export const MeshBlockMatchDescription2016: AddressElement = { elementName: "2016MeshBlockMatchDescription", description: "The description of the 2016 Mesh Block match level", example: "" };
    export const ComplexAddressTypeCode: AddressElement = { elementName: "complexAddressTypeCode", description: "Returns the Address Type", example: "P" };
    export const PrimaryAddressPid: AddressElement = { elementName: "primaryAddressPid", description: "This element will only be populated if the input address is a secondary address", example: "" };
    export const AddressJoinTypeCode: AddressElement = { elementName: "addressJoinTypeCode", description: "Returns the Join Type Code", example: "" };
    export const GnafLegalParcelIdentifier: AddressElement = { elementName: "gnafLegalParcelIdentifier", description: "The Legal Parcel Id field", example: "" };
    export const CollectorDistrictId: AddressElement = { elementName: "collectorDistrictId", description: "This is a unique Collector District persistent identifier", example: "" };
    export const CollectorDistrictCode: AddressElement = { elementName: "collectorDistrictCode", description: "This is the Collector District Code", example: "" };
    export const CommonwealthElectoralBoundaryId: AddressElement = { elementName: "commonwealthElectoralBoundaryId", description: "This is a unique Commonwealth Electoral Boundary persistent identifier", example: "" };
    export const CommonwealthElectoralBoundaryName: AddressElement = { elementName: "commonwealthElectoralBoundaryName", description: "This is the Commonwealth Electoral Boundary name", example: "" };
    export const LocalGovernmentAreaId: AddressElement = { elementName: "localGovernmentAreaId", description: "This is a Local Government Area persistent identifier", example: "" };
    export const LocalGovernmentAreaName: AddressElement = { elementName: "localGovernmentAreaName", description: "This is the Local Government Area name", example: "" };
    export const StatisticalLocalAreaId: AddressElement = { elementName: "statisticalLocalAreaId", description: "This is a Statistical Local Area persistent identifier", example: "" };
    export const StatisticalLocalAreaCode: AddressElement = { elementName: "statisticalLocalAreaCode", description: "This is a Statistical Local Area code", example: "" };
    export const StatisticalLocalAreaName: AddressElement = { elementName: "statisticalLocalAreaName", description: "This is a Statistical Local Area name", example: "" };
    export const StateElectoralBoundaryId: AddressElement = { elementName: "stateElectoralBoundaryId", description: "This is a State Electoral Boundary persistent identifier", example: "" };
    export const StateElectoralBoundaryName: AddressElement = { elementName: "stateElectoralBoundaryName", description: "This is a State Electoral Boundary name", example: "" };
    export const StateElectoralEffectiveStart: AddressElement = { elementName: "stateElectoralEffectiveStart", description: "This is the date that the electorate becomes effective", example: "" };
    export const StateElectoralEffectiveEnd: AddressElement = { elementName: "stateElectoralEffectiveEnd", description: "This is the end date when electorate is no longer in effect", example: "" };
    export const StateElectoralNewBoundaryId: AddressElement = { elementName: "stateElectoralNewBoundaryId", description: "This is the State Electoral Boundary identifier for new electorate", example: "" };
    export const StateElectoralNewBoundaryName: AddressElement = { elementName: "stateElectoralNewBoundaryName", description: "This is the State Electoral Boundary name for new electorate", example: "" };
    export const StateElectoralNewEffectiveStart: AddressElement = { elementName: "stateElectoralNewEffectiveStart", description: "This is the start date that the new electorate will become effective", example: "" };
    export const StateElectoralNewEffectiveEnd: AddressElement = { elementName: "stateElectoralNewEffectiveEnd", description: "This is the end date when the new electorate will no longer be in effect", example: "" };
    export const MosaicGroup: AddressElement = { elementName: "mosaicGroup", description: "Mosaic Group", example: "K" };
    export const MosaicType: AddressElement = { elementName: "mosaicType", description: "Mosaic Group and Type", example: "K39" };
    export const MosaicSegmentCode: AddressElement = { elementName: "mosaicSegmentCode", description: "Mosaic Segment", example: "A01_3" };
    export const Factor1Score: AddressElement = { elementName: "factor1Score", description: "Factors score", example: "-24255" };
    export const Factor1Percentile: AddressElement = { elementName: "factor1Percentile", description: "Factors percentile", example: "13" };
    export const Factor2Score: AddressElement = { elementName: "factor2Score", description: "Factors score", example: "-024255" };
    export const Factor2Percentile: AddressElement = { elementName: "factor2Percentile", description: "Factors percentile", example: "13" };
    export const Factor3Score: AddressElement = { elementName: "factor3Score", description: "Factors score", example: "-24255" };
    export const Factor3Percentile: AddressElement = { elementName: "factor3Percentile", description: "Factors percentile", example: "13" };
    export const Factor4Score: AddressElement = { elementName: "factor4Score", description: "Factors score", example: "-24255" };
    export const Factor4Percentile: AddressElement = { elementName: "factor4Percentile", description: "Factors percentile", example: "13" };
    export const Factor5Score: AddressElement = { elementName: "factor5Score", description: "Factors score", example: "-24255" };
    export const Factor5Percentile: AddressElement = { elementName: "factor5Percentile", description: "Factors percentile", example: "13" };
    export const LengthOfResidence: AddressElement = { elementName: "lengthOfResidence", description: "The code representing the Length of Residence band", example: "2" };
    export const HeadOfHouseholdAge: AddressElement = { elementName: "headOfHouseholdAge", description: "The code representing the Age band", example: "11" };
    export const PropensityForChildren0To10Years: AddressElement = { elementName: "propensityForChildren0To10Years", description: "Double digit code representing the band", example: "02" };
    export const PropensityForChildren11To18Years: AddressElement = { elementName: "propensityForChildren11To18Years", description: "Double digit code representing the band", example: "02" };
    export const AdultsAtAddress: AddressElement = { elementName: "adultsAtAddress", description: "An estimate of the number of adults at the address", example: "3" };
    export const HouseholdComposition: AddressElement = { elementName: "householdComposition", description: "Single digit code representing the Household Composition band", example: "2" };
    export const Lifestage: AddressElement = { elementName: "lifestage", description: "2-digit code representing the Lifestage band", example: "09" };
    export const HouseholdIncome: AddressElement = { elementName: "householdIncome", description: "Single digit code representing the Household Income band", example: "5" };
    export const Affluence: AddressElement = { elementName: "affluence", description: "Single digit code representing the Affluence band", example: "3" };
    export const RiskInsight: AddressElement = { elementName: "riskInsight", description: "Code representing the Risk Insight band", example: "7" };
    export const CreditDemand: AddressElement = { elementName: "creditDemand", description: "Code representing the Credit Demand band", example: "7" };

    export function getElementByName(elementName: string): AddressElement | undefined {
        return Object.values(AugAddressElements)
            .filter((element): element is AddressElement => typeof element === "object" && "elementName" in element)
            .find((element) => element.elementName === elementName);
    }
}