name: main

on:
  push:
    branches: [ "main" ]

jobs:
  increaseVersionNumber:
    runs-on: ubuntu-latest
    name: Increase version number

    steps:

    - name: Set Repository Variable
      # You may pin to the exact commit or the version.
      # uses: action-pack/set-variable@54de69c1565d1c9de606af2f1406814aa5d7551c
      uses: action-pack/set-variable@v1.13
      with:
        # Name
        name: SDKVERSION
        # Value
        value: 0.2.0
        # Repository name
        repository: edq-data-validation-sdks
        # Repository owner
        owner: experianplc
        # Flag for organization
        org: true
        # Repository access token
        token: ${{ secrets.GITHUB_TOKEN }}

  buildDotNet:
    runs-on: ubuntu-latest 
    name: .NET build and publish

    permissions:
      contents: 'read'
      packages: 'write'

    strategy:
      matrix:
        dotnet-version: [ '8.0.x' ]

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        source-url: https://nuget.pkg.github.com/experianplc/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
    - name: Restore dependencies
      run: dotnet restore
      working-directory: csharp/
    - name: Build
      run: dotnet build --no-restore --configuration Release -p:Version=${{ vars.SDKVERSION }} DVSClient.sln
      working-directory: csharp/
    #- name: Test with dotnet
    #  run: dotnet test --no-restore --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}"
    #- name: Upload dotnet test results
    #  uses: actions/upload-artifact@v4
    #  with:
    #    name: dotnet-results-${{ matrix.dotnet-version }}
    #    path: TestResults-${{ matrix.dotnet-version }}
    #  # Use always() to always run this step to publish test results when there are test failures
    #  if: ${{ always() }}
    - name: Pack and publish
      run: |
        dotnet pack --configuration Release -p:PackageVersion=${{ vars.SDKVERSION }} DVSClient/DVSClient/DVSClient.csproj --no-build
        dotnet nuget push "DVSClient/DVSClient/bin/Release/*${{ vars.SDKVERSION }}.nupkg" --api-key ${{ secrets.GITHUB_TOKEN }}
      working-directory: csharp/